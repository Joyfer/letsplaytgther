<%- include ('template/cabecera', {tituloweb: 'Inicio EJS'});  %>
  <link rel="stylesheet" href="/css/player.css">
    <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
     <div class="card align-items-center mt-5">
      <form id="url" action=""><input class="loadia" id="n" type="text" ></input><button class="btn btn-success loadua">GO!</button></form>
    <div id="player"></div>
  
  <div class="progress1 containter mx-auto"><div class="progress">
    <div id="customRange1" class="progress-bar bg-success" style="width: 0%;" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
  </div></div>

<div class="row mt-4">

  <button class="btn btn-success controles" type="button" id="30segatras" value="atras">←</button>

  <button class="btn btn-success play" id="play-vid">Play</button>
      
  <button class="btn btn-success controles" id="30segadelante" value="adelante">→</button>
  </div>
 
  <div class="row">
    <button class="btn controles" type="button" id="reiniciar">asdas</button>
  </div></div> 



    <script>
      // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');
      

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.



      var player;
function onYouTubeIframeAPIReady() {
  player = new YT.Player('player', {
    height: '360',
    width: '640',
    videoId: "_h82Y-9GMJ8",
    events: {
      'playVideo': playVideo,
      'loadVideoById': loadVideo,
      'seekTo': seekTo,
      'onReady': onReady,
    }
  });
}

// 4. Play and pause controlls
function playVideo(event) {
  let state = player.getPlayerState()
  if (state == 1){
    player.pauseVideo();
    const sourcer = document.getElementById('play-vid');
    sourcer.innerHTML = "Play"}
  else {
    player.playVideo();
    const sourcer = document.getElementById('play-vid');
    sourcer.innerHTML = "Pause"}
  }



function loadVideo(url){
    player.loadVideoById(url, 0)
    console.log(url)
    playVideo(event)
}

function seekTo(amigo){
    player.seekTo(amigo)
}

function onReady(){
  let duracion = player.getDuration()
  const range = document.getElementById('customRange1');
  range.style.width = '0%';
}

if(document.hidden = true){
setInterval( () => {
  let inicio = player.getCurrentTime()
  let duracion = player.getDuration()
  const range = document.getElementById('customRange1');
  inicio = inicio / duracion * 100;
  range.style.width = inicio + '%';
}, 1000)
}

    </script>
  </body>
</html>

<script src="/socket.io/socket.io.js"></script>
<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
<script>
    $(function() {
        var socket = io();
        $('#url').submit(function(e) {
            e.preventDefault(); // prevents page reloading
            let url = $('#n').val();
            socket.emit('url-player', url);
            $('#n').val('');
            return false;
        });
        socket.on('url-player', loadVideo)
    });

    $(function() {
        var socket = io();
        $('#play-vid').click(function(e) {
            socket.emit('play-player');
            return false;
        });
        socket.on('play-player', playVideo)
    });

    $(function() {
        var socket = io();
        $('.controles').click(function(e) {
            let segundos = 30;
            let inicio = player.getCurrentTime()
            let evento = e.target.getAttribute('id');
            if(evento == '30segatras'){
            var amigo = inicio - segundos;
            } else if (evento == '30segadelante'){
            var amigo = inicio + segundos;
            }else if (evento == 'reiniciar'){
            var amigo = 0;
            }
            socket.emit('min-player', amigo);
            return false;
        });
        socket.on('min-player', seekTo)
    });


</script>